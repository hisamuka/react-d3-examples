{"ast":null,"code":"var _jsxFileName = \"/Users/hisamuka/workspace/react-d3-examples/d3-oriented-approach/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as d3 from \"d3\";\n\nfunction getData() {\n  let numItems = 20 + Math.floor(20 * Math.random());\n  let data = [];\n\n  for (let i = 0; i < numItems; i++) {\n    data.push({\n      x: Math.random(),\n      y: Math.random(),\n      r: Math.random(),\n      colour: i % 5\n    });\n  }\n\n  return data;\n}\n\nlet colours = ['#2176ae', '#57b8ff', '#b66d0d', '#fbb13c', '#fe6847'];\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: getData()\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.updateStyleAndAttrs = this.updateChart.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      data: getData()\n    });\n  }\n\n  componentDidMount() {\n    this.updateChart();\n  }\n\n  componentDidUpdate() {// this.updateChart()\n  }\n\n  updateChart() {\n    let maxRadius = 40;\n    let xScale = d3.scaleLinear().domain([0, 1]).range([0, this.props.width]);\n    let yScale = d3.scaleLinear().domain([0, 1]).range([0, this.props.height]);\n    let rScale = d3.scaleLinear().domain([0, 1]).range([0, maxRadius]);\n    let u = d3.select(this.svgEl).selectAll('circle').data(this.state.data);\n    u.enter().append('circle').attr('cx', 0.5 * this.props.width).attr('cy', 0.5 * this.props.height).style('fill', '#fff').merge(u).transition().duration(1000).attr('cx', d => xScale(d.x)).attr('cy', d => yScale(d.y)).attr('r', d => rScale(d.r)).style('fill', d => colours[d.colour]);\n    u.exit().remove();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: this.props.width,\n      height: this.props.height,\n      ref: el => this.svgEl = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Update\")));\n  }\n\n}\n\nReactDOM.render(React.createElement(Chart, {\n  width: 800,\n  height: 600,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}), document.getElementById('app'));","map":{"version":3,"sources":["/Users/hisamuka/workspace/react-d3-examples/d3-oriented-approach/src/index.js"],"names":["React","ReactDOM","d3","getData","numItems","Math","floor","random","data","i","push","x","y","r","colour","colours","Chart","Component","constructor","props","state","handleClick","bind","updateStyleAndAttrs","updateChart","setState","componentDidMount","componentDidUpdate","maxRadius","xScale","scaleLinear","domain","range","width","yScale","height","rScale","u","select","svgEl","selectAll","enter","append","attr","style","merge","transition","duration","d","exit","remove","render","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as d3 from \"d3\";\n\n\nfunction getData() {\n    let numItems = 20 + Math.floor(20 * Math.random())\n    let data = []\n    for(let i=0; i<numItems; i++) {\n        data.push({\n            x: Math.random(),\n            y: Math.random(),\n            r: Math.random(),\n            colour: i % 5\n        })\n    }\n    return data\n}\n\nlet colours = ['#2176ae', '#57b8ff', '#b66d0d', '#fbb13c', '#fe6847']\n\nclass Chart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: getData()\n        }\n\n        this.handleClick = this.handleClick.bind(this)\n        this.updateStyleAndAttrs = this.updateChart.bind(this)\n    }\n\n    handleClick() {\n        this.setState({\n            data: getData()\n        })\n    }\n\n    componentDidMount() {\n        this.updateChart()\n    }\n\n    componentDidUpdate() {\n        // this.updateChart()\n    }\n\n    updateChart() {\n        let maxRadius = 40\n        let xScale = d3.scaleLinear().domain([0, 1]).range([0, this.props.width])\n        let yScale = d3.scaleLinear().domain([0, 1]).range([0, this.props.height])\n        let rScale = d3.scaleLinear().domain([0, 1]).range([0, maxRadius])\n\n        let u = d3.select(this.svgEl)\n            .selectAll('circle')\n            .data(this.state.data)\n\n        u.enter()\n            .append('circle')\n            .attr('cx', 0.5 * this.props.width)\n            .attr('cy', 0.5 * this.props.height)\n            .style('fill', '#fff')\n            .merge(u)\n            .transition()\n            .duration(1000)\n            .attr('cx', d => xScale(d.x))\n            .attr('cy', d => yScale(d.y))\n            .attr('r', d => rScale(d.r))\n            .style('fill', d => colours[d.colour])\n\n        u.exit().remove()\n    }\n\n    render() {\n        return <div>\n            <svg width={this.props.width} height={this.props.height} ref={el => this.svgEl = el}></svg>\n            <div><button onClick={this.handleClick}>Update</button></div>\n        </div>\n    }\n}\n\nReactDOM.render(\n    <Chart width={800} height={600} />,\n    document.getElementById('app')\n)\n"]},"metadata":{},"sourceType":"module"}