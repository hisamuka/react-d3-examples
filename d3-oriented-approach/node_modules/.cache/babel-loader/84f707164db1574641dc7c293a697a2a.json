{"ast":null,"code":"var _jsxFileName = \"/Users/hisamuka/workspace/react-d3-examples/d3-oriented-approach/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport d3 from \"d3\";\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [1, 2, 3]\n    };\n  }\n\n  updateChart() {\n    let maxRadius = 40;\n    let xScale = d3.scaleLinear().domain([0, 1]).range([0, this.props.width]);\n    let yScale = d3.scaleLinear().domain([0, 1]).range([0, this.props.height]);\n    let rScale = d3.scaleLinear().domain([0, 1]).range([0, maxRadius]);\n    let u = d3.select(this.svgEl).selectAll('circle').data(this.state.data);\n    var colors = d3.scale.category20c();\n    u.enter().append('circle').merge(u).attr('cx', d => xScale(d.x)).attr('cy', d => yScale(d.y)).attr('r', d => rScale(d.r)).style('fill', d => colours[d.colour]);\n    u.exit().remove();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: this.props.width,\n      height: this.props.height,\n      ref: el => this.svgEl = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Chart, {\n  width: 800,\n  height: 600,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), document.getElementById('app'));","map":{"version":3,"sources":["/Users/hisamuka/workspace/react-d3-examples/d3-oriented-approach/src/index.js"],"names":["React","ReactDOM","d3","Chart","Component","constructor","props","state","data","updateChart","maxRadius","xScale","scaleLinear","domain","range","width","yScale","height","rScale","u","select","svgEl","selectAll","colors","scale","category20c","enter","append","merge","attr","d","x","y","r","style","colours","colour","exit","remove","render","el","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,EAAP,MAAe,IAAf;;AAGA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AADG,KAAb;AAGH;;AAEDC,EAAAA,WAAW,GAAG;AACV,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,MAAM,GAAGT,EAAE,CAACU,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAI,CAAJ,CAAxB,EAAgCC,KAAhC,CAAsC,CAAC,CAAD,EAAI,KAAKR,KAAL,CAAWS,KAAf,CAAtC,CAAb;AACA,QAAIC,MAAM,GAAGd,EAAE,CAACU,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAI,CAAJ,CAAxB,EAAgCC,KAAhC,CAAsC,CAAC,CAAD,EAAI,KAAKR,KAAL,CAAWW,MAAf,CAAtC,CAAb;AACA,QAAIC,MAAM,GAAGhB,EAAE,CAACU,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAI,CAAJ,CAAxB,EAAgCC,KAAhC,CAAsC,CAAC,CAAD,EAAIJ,SAAJ,CAAtC,CAAb;AAEA,QAAIS,CAAC,GAAGjB,EAAE,CAACkB,MAAH,CAAU,KAAKC,KAAf,EACHC,SADG,CACO,QADP,EAEHd,IAFG,CAEE,KAAKD,KAAL,CAAWC,IAFb,CAAR;AAIA,QAAIe,MAAM,GAAGrB,EAAE,CAACsB,KAAH,CAASC,WAAT,EAAb;AAEAN,IAAAA,CAAC,CAACO,KAAF,GACKC,MADL,CACY,QADZ,EAEKC,KAFL,CAEWT,CAFX,EAGKU,IAHL,CAGU,IAHV,EAGgBC,CAAC,IAAInB,MAAM,CAACmB,CAAC,CAACC,CAAH,CAH3B,EAIKF,IAJL,CAIU,IAJV,EAIgBC,CAAC,IAAId,MAAM,CAACc,CAAC,CAACE,CAAH,CAJ3B,EAKKH,IALL,CAKU,GALV,EAKeC,CAAC,IAAIZ,MAAM,CAACY,CAAC,CAACG,CAAH,CAL1B,EAMKC,KANL,CAMW,MANX,EAMmBJ,CAAC,IAAIK,OAAO,CAACL,CAAC,CAACM,MAAH,CAN/B;AAQAjB,IAAAA,CAAC,CAACkB,IAAF,GAASC,MAAT;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AACI,MAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWS,KADtB;AAEI,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWW,MAFvB;AAGI,MAAA,GAAG,EAAEuB,EAAE,IAAI,KAAKnB,KAAL,GAAamB,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AAOH;;AAxC+B;;AA2CpCvC,QAAQ,CAACsC,MAAT,CACI,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAE,GAAd;AAAmB,EAAA,MAAM,EAAE,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIE,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAFJ","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport d3 from \"d3\";\n\n\nclass Chart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [1, 2, 3]\n        }\n    }\n\n    updateChart() {\n        let maxRadius = 40\n        let xScale = d3.scaleLinear().domain([0, 1]).range([0, this.props.width]);\n        let yScale = d3.scaleLinear().domain([0, 1]).range([0, this.props.height]);\n        let rScale = d3.scaleLinear().domain([0, 1]).range([0, maxRadius]);\n\n        let u = d3.select(this.svgEl)\n            .selectAll('circle')\n            .data(this.state.data);\n\n        var colors = d3.scale.category20c();\n\n        u.enter()\n            .append('circle')\n            .merge(u)\n            .attr('cx', d => xScale(d.x))\n            .attr('cy', d => yScale(d.y))\n            .attr('r', d => rScale(d.r))\n            .style('fill', d => colours[d.colour]);\n\n        u.exit().remove()\n    }\n\n    render() {\n        return <div>\n            <svg\n                width={this.props.width}\n                height={this.props.height}\n                ref={el => this.svgEl = el} >\n            </svg>\n        </div>\n    }\n}\n\nReactDOM.render(\n    <Chart width={800} height={600} />,\n    document.getElementById('app')\n);"]},"metadata":{},"sourceType":"module"}