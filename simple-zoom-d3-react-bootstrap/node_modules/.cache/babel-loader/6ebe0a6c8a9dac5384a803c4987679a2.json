{"ast":null,"code":"var _jsxFileName = \"/Users/hisamuka/workspace/react-d3-examples/simple-zoom-d3-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport * as d3 from \"d3\"; // import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import Col from \"react-bootstrap/Col\";\n\nclass Chart extends React.Component {\n  componentDidMount() {\n    var svg = d3.select(\"#chart\").append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").call(d3.behavior.zoom().on(\"zoom\", function () {\n      svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")\" + \" scale(\" + d3.event.scale + \")\");\n    })).append(\"g\");\n    svg.append(\"circle\").attr(\"cx\", document.body.clientWidth / 2).attr(\"cy\", document.body.clientHeight / 2).attr(\"r\", 50).style(\"fill\", \"#B8DEE6\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n}\n\nReactDOM.render(React.createElement(Chart, {\n  width: 1000,\n  height: 500,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), document.getElementById(\"chart\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/hisamuka/workspace/react-d3-examples/simple-zoom-d3-react/src/index.js"],"names":["React","ReactDOM","serviceWorker","d3","Chart","Component","componentDidMount","svg","select","append","attr","call","behavior","zoom","on","event","translate","scale","document","body","clientWidth","clientHeight","style","render","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,OAAO,KAAKC,EAAZ,MAAoB,IAApB,C,CACA;AACA;AACA;;AAGA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,GAAG,GAAGJ,EAAE,CAACK,MAAH,CAAU,QAAV,EACLC,MADK,CACE,KADF,EAELC,IAFK,CAEA,OAFA,EAES,MAFT,EAGLA,IAHK,CAGA,QAHA,EAGU,MAHV,EAILC,IAJK,CAIAR,EAAE,CAAES,QAAJ,CAAaC,IAAb,GAAoBC,EAApB,CAAuB,MAAvB,EAA+B,YAAY;AAC7CP,MAAAA,GAAG,CAACG,IAAJ,CAAS,WAAT,EAAsB,eAAeP,EAAE,CAACY,KAAH,CAASC,SAAxB,GAAoC,GAApC,GAA0C,SAA1C,GAAsDb,EAAE,CAACY,KAAH,CAASE,KAA/D,GAAuE,GAA7F;AACH,KAFK,CAJA,EAOLR,MAPK,CAOE,GAPF,CAAV;AASAF,IAAAA,GAAG,CAACE,MAAJ,CAAW,QAAX,EACKC,IADL,CACU,IADV,EACgBQ,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4B,CAD5C,EAEKV,IAFL,CAEU,IAFV,EAEgBQ,QAAQ,CAACC,IAAT,CAAcE,YAAd,GAA6B,CAF7C,EAGKX,IAHL,CAGU,GAHV,EAGe,EAHf,EAIKY,KAJL,CAIW,MAJX,EAImB,SAJnB;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAE,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAtB+B;;AAyBpCtB,QAAQ,CAACsB,MAAT,CAAgB,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAE,IAAd;AAAoB,EAAA,MAAM,EAAE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAqDL,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CAArD,E,CAEA;AACA;AACA;;AACAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport * as d3 from \"d3\";\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n// import Col from \"react-bootstrap/Col\";\n\n\nclass Chart extends React.Component {\n    componentDidMount() {\n        var svg = d3.select(\"#chart\")\n            .append(\"svg\")\n            .attr(\"width\", \"100%\")\n            .attr(\"height\", \"100%\")\n            .call(d3. behavior.zoom().on(\"zoom\", function () {\n                svg.attr(\"transform\", \"translate(\" + d3.event.translate + \")\" + \" scale(\" + d3.event.scale + \")\")\n            }))\n            .append(\"g\")\n\n        svg.append(\"circle\")\n            .attr(\"cx\", document.body.clientWidth / 2)\n            .attr(\"cy\", document.body.clientHeight / 2)\n            .attr(\"r\", 50)\n            .style(\"fill\", \"#B8DEE6\")\n    }\n\n    render() {\n        return (\n            <div id={\"chart\"}></div>\n        );\n    }\n}\n\nReactDOM.render(<Chart width={1000} height={500} />, document.getElementById(\"chart\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}