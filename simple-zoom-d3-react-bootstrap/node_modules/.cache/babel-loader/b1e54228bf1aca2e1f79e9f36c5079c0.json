{"ast":null,"code":"var _jsxFileName = \"/Users/hisamuka/workspace/react-d3-examples/simple-zoom-d3-react-bootstrap/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport * as d3 from \"d3\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\"; // Example based on:\n// https://coderwall.com/p/psogia/simplest-way-to-add-zoom-pan-on-d3-js\n// http://bl.ocks.org/sgruhier/1d692762f8328a2c9957\n\nconst WIDTH = 400;\nconst HEIGHT = 400;\n\nclass Chart extends React.Component {\n  componentDidMount() {\n    let width = 400;\n    let height = 400;\n    let circleRadius = 0.2 * width; // creates a <svg> element\n\n    let svg = d3.select(\"#chart\").attr(\"width\", width).attr(\"height\", height); // Our \"container\" is a group element <g> inside the <svg> that will\n    // have the transformations.\n    // Once transformed (translated or zoomed), all its elements are also\n    // transformed. In the case, it only has a circle.\n\n    let container = svg.append(\"g\");\n    let circle = container.append(\"circle\").attr(\"cx\", width / 2).attr(\"cy\", height / 2).attr(\"r\", circleRadius).style(\"fill\", \"#B8DEE6\"); // once a drag or a zoom is performed on <svg> (not only on the circle).\n    // the container is transformed\n\n    container.call(d3.zoom().on(\"zoom\", function () {\n      circle.attr(\"transform\", d3.event.transform);\n    }));\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      className: \"d-flex justify-content-center align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))); // return (\n    //     <div id={\"chart\"}></div>\n    // );\n  }\n\n}\n\nReactDOM.render(React.createElement(Chart, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/hisamuka/workspace/react-d3-examples/simple-zoom-d3-react-bootstrap/src/index.js"],"names":["React","ReactDOM","serviceWorker","d3","Container","Row","Col","WIDTH","HEIGHT","Chart","Component","componentDidMount","width","height","circleRadius","svg","select","attr","container","append","circle","style","call","zoom","on","event","transform","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CAGA;AACA;AACA;;AAGA,MAAMC,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,GAAf;;AAGA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAChCC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,GAAZ;AACA,QAAIC,MAAM,GAAG,GAAb;AACA,QAAIC,YAAY,GAAG,MAAMF,KAAzB,CAHgB,CAKhB;;AACA,QAAIG,GAAG,GAAGZ,EAAE,CAACa,MAAH,CAAU,QAAV,EACLC,IADK,CACA,OADA,EACSL,KADT,EAELK,IAFK,CAEA,QAFA,EAEUJ,MAFV,CAAV,CANgB,CAWhB;AACA;AACA;AACA;;AACA,QAAIK,SAAS,GAAGH,GAAG,CAACI,MAAJ,CAAW,GAAX,CAAhB;AACA,QAAIC,MAAM,GAAGF,SAAS,CAACC,MAAV,CAAiB,QAAjB,EACUF,IADV,CACe,IADf,EACqBL,KAAK,GAAG,CAD7B,EAEUK,IAFV,CAEe,IAFf,EAEqBJ,MAAM,GAAG,CAF9B,EAGUI,IAHV,CAGe,GAHf,EAGoBH,YAHpB,EAIUO,KAJV,CAIgB,MAJhB,EAIwB,SAJxB,CAAb,CAhBgB,CAsBhB;AACA;;AACAH,IAAAA,SAAS,CAACI,IAAV,CAAenB,EAAE,CAACoB,IAAH,GAAUC,EAAV,CAAa,MAAb,EAAqB,YAAY;AAC5CJ,MAAAA,MAAM,CAACH,IAAP,CAAY,WAAZ,EAAyBd,EAAE,CAACsB,KAAH,CAASC,SAAlC;AACH,KAFc,CAAf;AAGH;;AAGDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAE,OAAT;AAAkB,MAAA,SAAS,EAAE,kDAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CADJ,CADK,CAYL;AACA;AACA;AACH;;AA9C+B;;AAiDpC1B,QAAQ,CAAC0B,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B,E,CAEA;AACA;AACA;;AACA3B,aAAa,CAAC4B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport * as d3 from \"d3\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n\n// Example based on:\n// https://coderwall.com/p/psogia/simplest-way-to-add-zoom-pan-on-d3-js\n// http://bl.ocks.org/sgruhier/1d692762f8328a2c9957\n\n\nconst WIDTH = 400;\nconst HEIGHT = 400;\n\n\nclass Chart extends React.Component {\n    componentDidMount() {\n        let width = 400;\n        let height = 400;\n        let circleRadius = 0.2 * width;\n\n        // creates a <svg> element\n        let svg = d3.select(\"#chart\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n\n        // Our \"container\" is a group element <g> inside the <svg> that will\n        // have the transformations.\n        // Once transformed (translated or zoomed), all its elements are also\n        // transformed. In the case, it only has a circle.\n        let container = svg.append(\"g\");\n        let circle = container.append(\"circle\")\n                              .attr(\"cx\", width / 2)\n                              .attr(\"cy\", height / 2)\n                              .attr(\"r\", circleRadius)\n                              .style(\"fill\", \"#B8DEE6\");\n\n        // once a drag or a zoom is performed on <svg> (not only on the circle).\n        // the container is transformed\n        container.call(d3.zoom().on(\"zoom\", function () {\n            circle.attr(\"transform\", d3.event.transform);\n        }))\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col xs={12}>\n                        <div id={\"chart\"} className={\"d-flex justify-content-center align-items-center\"}>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        );\n\n        // return (\n        //     <div id={\"chart\"}></div>\n        // );\n    }\n}\n\nReactDOM.render(<Chart />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}